{
  "taskName": "Task 4 Mentors checklist",
  "information": "Dear mentor<br><br>This form helps you to check and evaluate Task4 https://github.com/rolling-scopes-school/rs.android.task.4 <br><br>You have to<br>1. check the tasks of your students according to task4 conditions<br>2. provide code review to your students and share the best practices to solve these kinds of challenges<br>3. rate the student's work from 0 (nothing done) to 100 (perfect work) and submit the score on https://app.rs.school/course/submit-scores?course=android-2021 <br><br>If there are nuances that are not described in this form, interpret them by yourself (decreasing or increasing the score) at your discretion. Guide by common sense in this case üòå",
  "criteria": [
    {
      "type": "title",
      "title": "üëç Task's criteria +100"
    },
    {
      "type": "subtask", 
      "text": "Screen with RecyclerView and data from a database was implemented",
      "max": 20
    },
    {
      "type": "subtask",
      "text": "The \"Add\" button was implemented. After clicking the \"Add\" button user should be redirected to \"Add item screen\" where he could add a new item to the database",
      "max": 20
    },
    {
      "type": "subtask",
      "text": "Update and Delete functionality was implemented. User can delete, update the data of the database",
      "max": 20
    },
    {
      "type": "subtask", 
      "text": "Filter Screen was implemented. On the main Screen, user can click the Filter button and go to the filter Screen which is implemented using PreferenceFragment or some new approaches https://developer.android.com/guide/topics/ui/settings",
      "max": 20
    },
    {
      "type": "subtask", 
      "text": "Work with Cursor and Room was implemented. The app should provide two implementations(first for Cursors and second for Room), and should be able to change implementation in runtime(by a button click, settings, etc.)",
      "max": 20
    },
    {
      "type": "title",
      "title": "‚òùÔ∏è Penalties -30"
    },
    {
      "type": "penalty",
      "text": "Error-prone code (memory leaks, poor architecture style which leads to errors, etc.)",
      "max": -10
    },
    {
      "type": "penalty",
      "text": "Messy and poor style of code:<br><br>abuse of !!, lateinit, etc.<br>poor variable naming<br>non-functional extra code<br>etc.",
      "max": -10
    },
    {
      "type": "penalty",
      "text": "Some non-critical crashes during the work (during rotates, entering not-valid data, etc.)",
      "max": -10
    }
  ]
}